{"ast":null,"code":"var _jsxFileName = \"/home/rails/react-test-code-contextAPI/src/components/update-customer.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react'; // import { useDispatch } from 'react-redux';\n\nimport { useStoreContext } from '../contextAPI/index';\nimport { updateCustomer, deleteCustomer } from '../redux/actions/customer';\nimport { Counter } from '../un-stated';\nimport styles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateCustomer = ({\n  id,\n  customerName,\n  closeUpdation\n}) => {\n  _s();\n\n  const [newCustomerName, changeCustomerName] = useState(customerName);\n  const [customerResource, dispatch] = useStoreContext(); // const dispatch = useDispatch();\n\n  useEffect(() => {\n    changeCustomerName(customerName);\n  }, [customerName]);\n\n  const updateCustomerDetail = () => {\n    dispatch(updateCustomer({\n      id,\n      newCustomerName,\n      closeUpdation\n    }));\n    closeUpdation();\n  };\n\n  const deleteCustomerDetail = () => {\n    dispatch(deleteCustomer({\n      id\n    }));\n    closeUpdation();\n  };\n\n  const handleChange = e => {\n    changeCustomerName(() => e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update-customer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newCustomerName,\n      onChange: handleChange,\n      className: \"input\",\n      type: \"text\",\n      autoComplete: \"off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: styles.width,\n          backgroundColor: styles.success\n        },\n        className: \"button left\",\n        onClick: () => updateCustomerDetail(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: styles.width,\n          backgroundColor: styles.warn.backgroundColor\n        },\n        className: \"button left\",\n        onClick: () => deleteCustomerDetail(),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: styles.width,\n          backgroundColor: styles.warn.backgroundColor\n        },\n        className: \"button left\",\n        onClick: closeUpdation,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateCustomer, \"Dt0a0GAEzLpydJ4EhSZSSz1PxPs=\", false, function () {\n  return [useStoreContext];\n});\n\n_c = UpdateCustomer;\nexport default UpdateCustomer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateCustomer\");","map":{"version":3,"sources":["/home/rails/react-test-code-contextAPI/src/components/update-customer.js"],"names":["useEffect","useState","useStoreContext","updateCustomer","deleteCustomer","Counter","styles","UpdateCustomer","id","customerName","closeUpdation","newCustomerName","changeCustomerName","customerResource","dispatch","updateCustomerDetail","deleteCustomerDetail","handleChange","e","target","value","width","backgroundColor","success","warn"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CACA;;AACA,SAAQC,eAAR,QAA8B,qBAA9B;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,2BAA/C;AACA,SAAQC,OAAR,QAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,YAAN;AAAoBC,EAAAA;AAApB,CAAD,KAAyC;AAAA;;AAC9D,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAACQ,YAAD,CAAtD;AACA,QAAM,CAACI,gBAAD,EAAmBC,QAAnB,IAA+BZ,eAAe,EAApD,CAF8D,CAG9D;;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,kBAAkB,CAACH,YAAD,CAAlB;AACD,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;;AAIA,QAAMM,oBAAoB,GAAG,MAAM;AACjCD,IAAAA,QAAQ,CAACX,cAAc,CAAC;AAAEK,MAAAA,EAAF;AAAMG,MAAAA,eAAN;AAAuBD,MAAAA;AAAvB,KAAD,CAAf,CAAR;AACAA,IAAAA,aAAa;AACd,GAHD;;AAKA,QAAMM,oBAAoB,GAAG,MAAM;AACjCF,IAAAA,QAAQ,CAACV,cAAc,CAAC;AAAEI,MAAAA;AAAF,KAAD,CAAf,CAAR;AACAE,IAAAA,aAAa;AACd,GAHD;;AAKA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AAC1BN,IAAAA,kBAAkB,CAAC,MAAMM,CAAC,CAACC,MAAF,CAASC,KAAhB,CAAlB;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,KAAK,EAAET,eADT;AAEE,MAAA,QAAQ,EAAEM,YAFZ;AAGE,MAAA,SAAS,EAAC,OAHZ;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,YAAY,EAAC;AALf;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAA,8BACE;AACE,QAAA,KAAK,EAAE;AAACI,UAAAA,KAAK,EAAEf,MAAM,CAACe,KAAf;AAAsBC,UAAAA,eAAe,EAAEhB,MAAM,CAACiB;AAA9C,SADT;AAEE,QAAA,SAAS,EAAE,aAFb;AAE4B,QAAA,OAAO,EAAE,MAAMR,oBAAoB,EAF/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,KAAK,EAAE;AAACM,UAAAA,KAAK,EAAEf,MAAM,CAACe,KAAf;AAAsBC,UAAAA,eAAe,EAAEhB,MAAM,CAACkB,IAAP,CAAYF;AAAnD,SADT;AAEE,QAAA,SAAS,EAAE,aAFb;AAE4B,QAAA,OAAO,EAAE,MAAMN,oBAAoB,EAF/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AACE,QAAA,KAAK,EAAE;AAACK,UAAAA,KAAK,EAAEf,MAAM,CAACe,KAAf;AAAsBC,UAAAA,eAAe,EAAEhB,MAAM,CAACkB,IAAP,CAAYF;AAAnD,SADT;AAEE,QAAA,SAAS,EAAE,aAFb;AAE4B,QAAA,OAAO,EAAEZ,aAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA7CD;;GAAMH,c;UAEiCL,e;;;KAFjCK,c;AA+CN,eAAeA,cAAf","sourcesContent":["import { useEffect, useState } from 'react';\n// import { useDispatch } from 'react-redux';\nimport {useStoreContext} from '../contextAPI/index';\nimport { updateCustomer, deleteCustomer } from '../redux/actions/customer';\nimport {Counter} from '../un-stated'\nimport styles from './styles';\n\nconst UpdateCustomer = ({ id, customerName, closeUpdation }) => {\n  const [newCustomerName, changeCustomerName] = useState(customerName);\n  const [customerResource, dispatch] = useStoreContext();\n  // const dispatch = useDispatch();\n\n  useEffect(() => {\n    changeCustomerName(customerName);\n  }, [customerName]);\n\n  const updateCustomerDetail = () => {\n    dispatch(updateCustomer({ id, newCustomerName, closeUpdation }));\n    closeUpdation();\n  }\n\n  const deleteCustomerDetail = () => {\n    dispatch(deleteCustomer({ id })); \n    closeUpdation();   \n  }\n\n  const handleChange = (e) => {\n    changeCustomerName(() => e.target.value);\n  }\n\n  return (\n    <div className='update-customer-container'>\n      <h1>Name</h1>\n      <input \n        value={newCustomerName} \n        onChange={handleChange} \n        className=\"input\" \n        type=\"text\" \n        autoComplete=\"off\"/>\n      <div>\n        <button\n          style={{width: styles.width, backgroundColor: styles.success }}\n          className={\"button left\"} onClick={() => updateCustomerDetail()}>Save</button>\n        <button\n          style={{width: styles.width, backgroundColor: styles.warn.backgroundColor }}\n          className={\"button left\"} onClick={() => deleteCustomerDetail()}>Delete</button>\n        <button\n          style={{width: styles.width, backgroundColor: styles.warn.backgroundColor }}\n          className={\"button left\"} onClick={closeUpdation}>Close</button>  \n      </div>  \n    </div>\n  )\n}\n\nexport default UpdateCustomer;\n"]},"metadata":{},"sourceType":"module"}