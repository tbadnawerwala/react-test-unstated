{"ast":null,"code":"var _jsxFileName = \"/home/rails/react-test-code-contextAPI/src/components/customer-list.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport Customer from \"./customer\";\nimport AddCustomer from \"./add-customer\";\nimport NewCustomerInput from \"./new-customer-input\";\nimport UpdateCustomer from \"./update-customer\";\nimport { Counter } from \"../un-stated\";\nimport { customerData } from \"../un-stated/reducerOne\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomerList = () => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = Counter.useContainer();\n  const {\n    customerList,\n    isLoading\n  } = state.reducerOne;\n  useEffect(() => {\n    dispatch(customerData());\n  }, []);\n  const [displayNewInput, changeNewInput] = useState(false);\n  const [updateCustomerData, changeUpdateCustomer] = useState({});\n  const onNewCustomer = useCallback(() => {\n    changeNewInput(state => !state);\n  });\n  const updateCustomerName = useCallback(({\n    id,\n    customerName\n  }) => {\n    changeUpdateCustomer(data => ({ ...data,\n      id,\n      customerName\n    }));\n  });\n  const closeUpdation = useCallback(() => {\n    changeUpdateCustomer({});\n  });\n\n  const ShowCustomerList = () => {\n    return !isLoading && customerList && customerList.length && customerList.map((customer, index) => {\n      return /*#__PURE__*/_jsxDEV(Customer, {\n        updateCustomerName: updateCustomerName,\n        id: customer.pk,\n        sequence: index + 1,\n        customerName: customer.fields.csgrp_name,\n        customerGroup: customer.fields.customer_group\n      }, customer.pk, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customer-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"customer-table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sequence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Customer Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Customer Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShowCustomerList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), displayNewInput && /*#__PURE__*/_jsxDEV(NewCustomerInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCustomer, {\n      onNewCustomer: onNewCustomer,\n      displayNewInput: displayNewInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tip\",\n      children: \"Tip: Use Tab and 'Shift + Tab' to select option without a mouse.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), updateCustomerData.id && /*#__PURE__*/_jsxDEV(UpdateCustomer, {\n      id: updateCustomerData.id,\n      closeUpdation: closeUpdation,\n      customerName: updateCustomerData.customerName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomerList, \"ca6PFi68hTMZJJkW8lYSJREDDBw=\", false, function () {\n  return [Counter.useContainer];\n});\n\n_c = CustomerList;\nexport default CustomerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"sources":["/home/rails/react-test-code-contextAPI/src/components/customer-list.js"],"names":["useCallback","useEffect","useState","Customer","AddCustomer","NewCustomerInput","UpdateCustomer","Counter","customerData","CustomerList","state","dispatch","useContainer","customerList","isLoading","reducerOne","displayNewInput","changeNewInput","updateCustomerData","changeUpdateCustomer","onNewCustomer","updateCustomerName","id","customerName","data","closeUpdation","ShowCustomerList","length","map","customer","index","pk","fields","csgrp_name","customer_group"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport Customer from \"./customer\";\nimport AddCustomer from \"./add-customer\";\nimport NewCustomerInput from \"./new-customer-input\";\nimport UpdateCustomer from \"./update-customer\";\nimport { Counter } from \"../un-stated\";\nimport { customerData } from \"../un-stated/reducerOne\";\n\nconst CustomerList = () => {\n  const { state, dispatch } = Counter.useContainer();\n  const { customerList, isLoading } = state.reducerOne;\n  useEffect(() => {\n    dispatch(customerData());\n  }, []);\n\n  const [displayNewInput, changeNewInput] = useState(false);\n  const [updateCustomerData, changeUpdateCustomer] = useState({});\n\n  const onNewCustomer = useCallback(() => {\n    changeNewInput((state) => !state);\n  });\n\n  const updateCustomerName = useCallback(({ id, customerName }) => {\n    changeUpdateCustomer((data) => ({\n      ...data,\n      id,\n      customerName,\n    }));\n  });\n\n  const closeUpdation = useCallback(() => {\n    changeUpdateCustomer({});\n  });\n\n  const ShowCustomerList = () => {\n    return (\n      !isLoading &&\n      customerList &&\n      customerList.length &&\n      customerList.map((customer, index) => {\n        return (\n          <Customer\n            key={customer.pk}\n            updateCustomerName={updateCustomerName}\n            id={customer.pk}\n            sequence={index + 1}\n            customerName={customer.fields.csgrp_name}\n            customerGroup={customer.fields.customer_group}\n          />\n        );\n      })\n    );\n  };\n\n  return (\n    <div className=\"customer-list\">\n      <table className=\"customer-table\">\n        <tbody>\n          <tr>\n            <th>Sequence</th>\n            <th>Customer Group</th>\n            <th>Customer Name</th>\n          </tr>\n          <ShowCustomerList />\n          {displayNewInput && <NewCustomerInput />}\n        </tbody>\n      </table>\n      {\n        <AddCustomer\n          onNewCustomer={onNewCustomer}\n          displayNewInput={displayNewInput}\n        />\n      }\n      <div className={\"tip\"}>\n        Tip: Use Tab and 'Shift + Tab' to select option without a mouse.\n      </div>\n      {updateCustomerData.id && (\n        <UpdateCustomer\n          id={updateCustomerData.id}\n          closeUpdation={closeUpdation}\n          customerName={updateCustomerData.customerName}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default CustomerList;\n"]},"metadata":{},"sourceType":"module"}