{"ast":null,"code":"var _jsxFileName = \"/home/rails/react-test-code-contextAPI/src/components/add-customer.js\",\n    _s = $RefreshSig$();\n\n// import { useDispatch } from 'react-redux';\n// import { addCustomer } from '../redux/actions/customer';\n// import { resetAddCustomerState } from '../redux/reducers/add-customer';\nimport { useStoreContext } from '../contextAPI/index';\nimport { saveCustomer1 } from '../contextAPI/contextReducer';\nimport { resetAddCustomerState } from '../contextAPI/add-customer';\nimport styles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddCustomer = ({\n  onNewCustomer,\n  displayNewInput\n}) => {\n  _s();\n\n  const [customerResource, dispatch] = useStoreContext();\n  const {\n    customer\n  } = customerResource.reducerTwo; // const dispatch = useDispatch();\n\n  console.log('ad customer data', customer);\n\n  const saveCustomer = async () => {\n    await dispatch(saveCustomer1({\n      customerName: customer.customerName,\n      customerGroup: customer.customerGroup\n    }));\n  };\n\n  const cancel = () => {\n    // dispatch(resetAddCustomerState());\n    onNewCustomer();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-button-container\",\n    children: [!displayNewInput && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: onNewCustomer,\n      children: \"Add New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), displayNewInput && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveCustomer,\n        className: 'left',\n        style: styles.save,\n        className: \"button\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancel,\n        className: 'left',\n        style: styles.cancel,\n        className: \"button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddCustomer, \"TM596LzbnPrzLrZ/HpsF3gFcxnk=\", false, function () {\n  return [useStoreContext];\n});\n\n_c = AddCustomer;\nexport default AddCustomer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCustomer\");","map":{"version":3,"sources":["/home/rails/react-test-code-contextAPI/src/components/add-customer.js"],"names":["useStoreContext","saveCustomer1","resetAddCustomerState","styles","AddCustomer","onNewCustomer","displayNewInput","customerResource","dispatch","customer","reducerTwo","console","log","saveCustomer","customerName","customerGroup","cancel","save"],"mappings":";;;AAAA;AACA;AACA;AACA,SAAQA,eAAR,QAA8B,qBAA9B;AACA,SAAQC,aAAR,QAA4B,8BAA5B;AACA,SAASC,qBAAT,QAAqC,4BAArC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KAAwC;AAAA;;AAC1D,QAAM,CAACC,gBAAD,EAAmBC,QAAnB,IAA+BR,eAAe,EAApD;AACA,QAAM;AAACS,IAAAA;AAAD,MAAaF,gBAAgB,CAACG,UAApC,CAF0D,CAG1D;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,QAAhC;;AACA,QAAMI,YAAY,GAAG,YAAY;AAC/B,UAAML,QAAQ,CAACP,aAAa,CAAC;AAACa,MAAAA,YAAY,EAAEL,QAAQ,CAACK,YAAxB;AAAsCC,MAAAA,aAAa,EAAEN,QAAQ,CAACM;AAA9D,KAAD,CAAd,CAAd;AAID,GALD;;AAOA,QAAMC,MAAM,GAAG,MAAM;AACpB;AACCX,IAAAA,aAAa;AACd,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,eAEI,CAACC,eAAD,iBACA;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAED,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAMIC,eAAe,iBAEf;AAAA,8BACE;AACE,QAAA,OAAO,EAAEO,YADX;AAEE,QAAA,SAAS,EAAE,MAFb;AAGE,QAAA,KAAK,EAAEV,MAAM,CAACc,IAHhB;AAIE,QAAA,SAAS,EAAC,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AACE,QAAA,OAAO,EAAED,MADX;AAEE,QAAA,SAAS,EAAE,MAFb;AAGE,QAAA,KAAK,EAAEb,MAAM,CAACa,MAHhB;AAIE,QAAA,SAAS,EAAC,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAzCD;;GAAMZ,W;UACiCJ,e;;;KADjCI,W;AA2CN,eAAeA,WAAf","sourcesContent":["// import { useDispatch } from 'react-redux';\n// import { addCustomer } from '../redux/actions/customer';\n// import { resetAddCustomerState } from '../redux/reducers/add-customer';\nimport {useStoreContext} from '../contextAPI/index';\nimport {saveCustomer1} from '../contextAPI/contextReducer';\nimport { resetAddCustomerState} from '../contextAPI/add-customer'\nimport styles from './styles'\n\nconst AddCustomer = ({ onNewCustomer, displayNewInput }) => {\n  const [customerResource, dispatch] = useStoreContext(); \n  const {customer} = customerResource.reducerTwo;\n  // const dispatch = useDispatch();\n  console.log('ad customer data', customer)\n  const saveCustomer = async () => {\n    await dispatch(saveCustomer1({customerName: customer.customerName, customerGroup: customer.customerGroup})\n);\n    \n     \n  };\n\n  const cancel = () => {\n   // dispatch(resetAddCustomerState());\n    onNewCustomer();\n  };\n\n  return (\n    <div className=\"add-button-container\">\n      {\n        !displayNewInput &&\n        <button className=\"button\" onClick={onNewCustomer}>Add New</button>\n      }\n      {\n        displayNewInput\n        &&\n        <>\n          <button\n            onClick={saveCustomer}\n            className={'left'}\n            style={styles.save}\n            className=\"button\">Save</button>\n          <button\n            onClick={cancel}\n            className={'left'}\n            style={styles.cancel}\n            className=\"button\">Cancel</button>\n        </>\n      }\n    </div>\n  )\n}\n\nexport default AddCustomer;\n"]},"metadata":{},"sourceType":"module"}