{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { initialState } from './contextReducer'; // const initialState = {\n//   isLoading: null,\n//   error: null,\n//   customerList: []\n// }\n// const {\n//   actions: {\n//     fetchCustomerListStart,\n//     fetchCustomerListSuccess,\n//     fetchCustomerListFailure,\n//     fetchCustomerListAddSuccess,\n//     updateCustomerList\n//   },\n//   reducer,\n// } = createSlice({\n//   name: 'customerList',\n//   initialState,\n//   reducers: {\n\nexport const fetchCustomerListStart = () => ({ ...initialState,\n  isLoading: true\n});\nexport const fetchCustomerListSuccess = data => ({ ...initialState,\n  customerList: data.customerData,\n  isLoading: false\n}); // export const fetchCustomerListFailure = () => ({\n//   ...initialState,\n//   error: true,\n//   isLoading: false,\n// })\n// export const fetchCustomerListAddSuccess = (state, action) => ({\n//   ...initialState,\n//   customerList: [...state.customerList, action.payload.newCustomerData]\n// })\n// export const updateCustomerList= (state, action) => {\n//   return {\n//     ...initialState,\n//     customerList: action.payload.customerList\n//   }\n// }\n//   },\n//})\n// export default reducer\n// export {\n//   fetchCustomerListStart,\n//   fetchCustomerListSuccess,\n//   fetchCustomerListFailure,\n//   fetchCustomerListAddSuccess,\n//   updateCustomerList\n// }","map":{"version":3,"sources":["/home/rails/react-test-code-contextAPI/src/contextAPI/customerReducer.js"],"names":["createSlice","initialState","fetchCustomerListStart","isLoading","fetchCustomerListSuccess","data","customerList","customerData"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAAQC,YAAR,QAA2B,kBAA3B,C,CACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,OAAO,MAAMC,sBAAsB,GAAE,OAAO,EAC1C,GAAGD,YADuC;AAE1CE,EAAAA,SAAS,EAAE;AAF+B,CAAP,CAA9B;AAIR,OAAO,MAAMC,wBAAwB,GAAIC,IAAD,KAAW,EAChD,GAAGJ,YAD6C;AAEhDK,EAAAA,YAAY,EAAED,IAAI,CAACE,YAF6B;AAGhDJ,EAAAA,SAAS,EAAE;AAHqC,CAAX,CAAjC,C,CAMN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport {initialState} from './contextReducer';\n// const initialState = {\n//   isLoading: null,\n//   error: null,\n//   customerList: []\n// }\n\n// const {\n//   actions: {\n//     fetchCustomerListStart,\n//     fetchCustomerListSuccess,\n//     fetchCustomerListFailure,\n//     fetchCustomerListAddSuccess,\n//     updateCustomerList\n//   },\n//   reducer,\n// } = createSlice({\n//   name: 'customerList',\n//   initialState,\n//   reducers: {\n    export const fetchCustomerListStart= () => ({\n      ...initialState,\n      isLoading: true,\n    })\n   export const fetchCustomerListSuccess = (data) => ({\n      ...initialState,\n      customerList: data.customerData,\n      isLoading: false,\n    })\n\n    // export const fetchCustomerListFailure = () => ({\n    //   ...initialState,\n    //   error: true,\n    //   isLoading: false,\n    // })\n    // export const fetchCustomerListAddSuccess = (state, action) => ({\n    //   ...initialState,\n    //   customerList: [...state.customerList, action.payload.newCustomerData]\n    // })\n    // export const updateCustomerList= (state, action) => {\n    //   return {\n    //     ...initialState,\n    //     customerList: action.payload.customerList\n    //   }\n    // }\n//   },\n//})\n\n// export default reducer\n// export {\n//   fetchCustomerListStart,\n//   fetchCustomerListSuccess,\n//   fetchCustomerListFailure,\n//   fetchCustomerListAddSuccess,\n//   updateCustomerList\n// }\n"]},"metadata":{},"sourceType":"module"}