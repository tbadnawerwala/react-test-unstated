{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isLoading: null,\n  error: null,\n  customer: {\n    customerName: '',\n    customerGroup: ''\n  }\n};\nconst {\n  actions: {\n    addCustomer,\n    resetAddCustomerState\n  },\n  reducer\n} = createSlice({\n  name: 'addCustomer',\n  initialState,\n  reducers: {\n    addCustomer: (state, action) => ({ ...initialState,\n      isLoading: true,\n      customer: action.payload\n    }),\n    resetAddCustomerState: (state, action) => ({ ...initialState\n    })\n  }\n});\nexport default reducer;\nexport { addCustomer, resetAddCustomerState };","map":{"version":3,"sources":["/home/rails/react-test-code-contextAPI/src/redux/reducers/add-customer.js"],"names":["createSlice","initialState","isLoading","error","customer","customerName","customerGroup","actions","addCustomer","resetAddCustomerState","reducer","name","reducers","state","action","payload"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,IADQ;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,EADN;AAERC,IAAAA,aAAa,EAAE;AAFP;AAHS,CAArB;AASA,MAAM;AACJC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WADO;AAEPC,IAAAA;AAFO,GADL;AAKJC,EAAAA;AALI,IAMFV,WAAW,CAAC;AACdW,EAAAA,IAAI,EAAE,aADQ;AAEdV,EAAAA,YAFc;AAGdW,EAAAA,QAAQ,EAAE;AACRJ,IAAAA,WAAW,EAAE,CAACK,KAAD,EAAQC,MAAR,MAAqB,EAChC,GAAGb,YAD6B;AAEhCC,MAAAA,SAAS,EAAE,IAFqB;AAGhCE,MAAAA,QAAQ,EAAEU,MAAM,CAACC;AAHe,KAArB,CADL;AAMRN,IAAAA,qBAAqB,EAAE,CAACI,KAAD,EAAQC,MAAR,MAAoB,EACzC,GAAGb;AADsC,KAApB;AANf;AAHI,CAAD,CANf;AAqBA,eAAeS,OAAf;AACA,SACEF,WADF,EAEEC,qBAFF","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  isLoading: null,\n  error: null,\n  customer: {\n    customerName: '',\n    customerGroup: ''\n  }\n}\n\nconst {\n  actions: {\n    addCustomer,\n    resetAddCustomerState\n  },\n  reducer,\n} = createSlice({\n  name: 'addCustomer',\n  initialState,\n  reducers: {\n    addCustomer: (state, action ) => ({\n      ...initialState,\n      isLoading: true,\n      customer: action.payload   \n    }),\n    resetAddCustomerState: (state, action) => ({\n      ...initialState\n    }),\n  },\n})\n\nexport default reducer\nexport {\n  addCustomer,\n  resetAddCustomerState\n}\n"]},"metadata":{},"sourceType":"module"}