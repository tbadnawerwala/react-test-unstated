{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isLoading: null,\n  error: null,\n  customerList: []\n};\nconst {\n  actions: {\n    fetchCustomerListStart,\n    fetchCustomerListSuccess,\n    fetchCustomerListFailure,\n    fetchCustomerListAddSuccess,\n    updateCustomerList\n  },\n  reducer\n} = createSlice({\n  name: 'customerList',\n  initialState,\n  reducers: {\n    fetchCustomerListStart: () => ({ ...initialState,\n      isLoading: true\n    }),\n    fetchCustomerListSuccess: (state, action) => ({ ...initialState,\n      customerList: action && action.payload && action.payload.customerData,\n      isLoading: false\n    }),\n    fetchCustomerListFailure: () => ({ ...initialState,\n      error: true,\n      isLoading: false\n    }),\n    fetchCustomerListAddSuccess: (state, action) => ({ ...initialState,\n      customerList: [...state.customerList, action.payload.newCustomerData]\n    }),\n    updateCustomerList: (state, action) => {\n      return { ...initialState,\n        customerList: action.payload.customerList\n      };\n    }\n  }\n});\nexport default reducer;\nexport { fetchCustomerListStart, fetchCustomerListSuccess, fetchCustomerListFailure, fetchCustomerListAddSuccess, updateCustomerList };","map":{"version":3,"sources":["/home/rails/react-test-code-contextAPI/src/redux/reducers/customer-list.js"],"names":["createSlice","initialState","isLoading","error","customerList","actions","fetchCustomerListStart","fetchCustomerListSuccess","fetchCustomerListFailure","fetchCustomerListAddSuccess","updateCustomerList","reducer","name","reducers","state","action","payload","customerData","newCustomerData"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,IADQ;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,YAAY,EAAE;AAHK,CAArB;AAMA,MAAM;AACJC,EAAAA,OAAO,EAAE;AACPC,IAAAA,sBADO;AAEPC,IAAAA,wBAFO;AAGPC,IAAAA,wBAHO;AAIPC,IAAAA,2BAJO;AAKPC,IAAAA;AALO,GADL;AAQJC,EAAAA;AARI,IASFX,WAAW,CAAC;AACdY,EAAAA,IAAI,EAAE,cADQ;AAEdX,EAAAA,YAFc;AAGdY,EAAAA,QAAQ,EAAE;AACRP,IAAAA,sBAAsB,EAAE,OAAO,EAC7B,GAAGL,YAD0B;AAE7BC,MAAAA,SAAS,EAAE;AAFkB,KAAP,CADhB;AAKRK,IAAAA,wBAAwB,EAAE,CAACO,KAAD,EAAQC,MAAR,MAAoB,EAC5C,GAAGd,YADyC;AAE5CG,MAAAA,YAAY,EAAEW,MAAM,IAAIA,MAAM,CAACC,OAAjB,IAA4BD,MAAM,CAACC,OAAP,CAAeC,YAFb;AAG5Cf,MAAAA,SAAS,EAAE;AAHiC,KAApB,CALlB;AAURM,IAAAA,wBAAwB,EAAE,OAAO,EAC/B,GAAGP,YAD4B;AAE/BE,MAAAA,KAAK,EAAE,IAFwB;AAG/BD,MAAAA,SAAS,EAAE;AAHoB,KAAP,CAVlB;AAeRO,IAAAA,2BAA2B,EAAE,CAACK,KAAD,EAAQC,MAAR,MAAoB,EAC/C,GAAGd,YAD4C;AAE/CG,MAAAA,YAAY,EAAE,CAAC,GAAGU,KAAK,CAACV,YAAV,EAAwBW,MAAM,CAACC,OAAP,CAAeE,eAAvC;AAFiC,KAApB,CAfrB;AAmBRR,IAAAA,kBAAkB,EAAE,CAACI,KAAD,EAAQC,MAAR,KAAmB;AACrC,aAAO,EACL,GAAGd,YADE;AAELG,QAAAA,YAAY,EAAEW,MAAM,CAACC,OAAP,CAAeZ;AAFxB,OAAP;AAID;AAxBO;AAHI,CAAD,CATf;AAwCA,eAAeO,OAAf;AACA,SACEL,sBADF,EAEEC,wBAFF,EAGEC,wBAHF,EAIEC,2BAJF,EAKEC,kBALF","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  isLoading: null,\n  error: null,\n  customerList: []\n}\n\nconst {\n  actions: {\n    fetchCustomerListStart,\n    fetchCustomerListSuccess,\n    fetchCustomerListFailure,\n    fetchCustomerListAddSuccess,\n    updateCustomerList\n  },\n  reducer,\n} = createSlice({\n  name: 'customerList',\n  initialState,\n  reducers: {\n    fetchCustomerListStart: () => ({\n      ...initialState,\n      isLoading: true,\n    }),\n    fetchCustomerListSuccess: (state, action) => ({\n      ...initialState,\n      customerList: action && action.payload && action.payload.customerData,\n      isLoading: false,\n    }),\n    fetchCustomerListFailure: () => ({\n      ...initialState,\n      error: true,\n      isLoading: false,\n    }),\n    fetchCustomerListAddSuccess: (state, action) => ({\n      ...initialState,\n      customerList: [...state.customerList, action.payload.newCustomerData]\n    }),\n    updateCustomerList: (state, action) => {\n      return {\n        ...initialState,\n        customerList: action.payload.customerList\n      }\n    }\n  },\n})\n\nexport default reducer\nexport {\n  fetchCustomerListStart,\n  fetchCustomerListSuccess,\n  fetchCustomerListFailure,\n  fetchCustomerListAddSuccess,\n  updateCustomerList\n}\n"]},"metadata":{},"sourceType":"module"}