{"ast":null,"code":"var _jsxFileName = \"/home/rails/react-test-code-contextAPI/src/components/customer-list.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from 'react'; // import { useDispatch, useSelector } from 'react-redux';\n// import { fetchCustomerListStart } from '../redux/reducers/customer-list';\n\nimport Customer from './customer';\nimport AddCustomer from './add-customer';\nimport NewCustomerInput from './new-customer-input';\nimport UpdateCustomer from './update-customer';\nimport { useStoreContext } from '../contextAPI/index';\nimport { customerData } from '../contextAPI/contextReducer';\nimport { Counter } from '../un-stated';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomerList = () => {\n  _s();\n\n  // const dispatch = useDispatch();\n  console.log('counter value', Counter.useContainer());\n  const {\n    state,\n    dispatch\n  } = Counter.useContainer();\n  console.log(state); // const [customerResource, dispatch] = useStoreContext(); //using  context api\n\n  const {\n    customerList,\n    isLoading\n  } = customerResource.reducerOne; // console.log('inside use effect', Counter.useCounter())\n\n  useEffect(() => {\n    //dispatch(fetchCustomerListStart());\n    dispatch(customerData());\n  }, []);\n  const [displayNewInput, changeNewInput] = useState(false);\n  const [updateCustomerData, changeUpdateCustomer] = useState({}); //const { customerList, isLoading } = useSelector((state) => state.customerList);\n\n  const onNewCustomer = useCallback(() => {\n    changeNewInput(state => !state);\n  });\n  const updateCustomerName = useCallback(({\n    id,\n    customerName\n  }) => {\n    changeUpdateCustomer(data => ({ ...data,\n      id,\n      customerName\n    }));\n  });\n  const closeUpdation = useCallback(() => {\n    changeUpdateCustomer({});\n  });\n\n  const ShowCustomerList = () => {\n    return !isLoading && customerList && customerList.length && customerList.map((customer, index) => {\n      return /*#__PURE__*/_jsxDEV(Customer, {\n        updateCustomerName: updateCustomerName,\n        id: customer.pk,\n        sequence: index + 1,\n        customerName: customer.fields.csgrp_name,\n        customerGroup: customer.fields.customer_group\n      }, customer.pk, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customer-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"customer-table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sequence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Customer Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Customer Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShowCustomerList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), displayNewInput && /*#__PURE__*/_jsxDEV(NewCustomerInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCustomer, {\n      onNewCustomer: onNewCustomer,\n      displayNewInput: displayNewInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'tip',\n      children: \"Tip: Use Tab and 'Shift + Tab' to select option without a mouse.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), updateCustomerData.id && /*#__PURE__*/_jsxDEV(UpdateCustomer, {\n      id: updateCustomerData.id,\n      closeUpdation: closeUpdation,\n      customerName: updateCustomerData.customerName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomerList, \"ALoL2R3L3fUAx4XUSSVKou0QPT8=\", false, function () {\n  return [Counter.useContainer, Counter.useContainer];\n});\n\n_c = CustomerList;\nexport default CustomerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"sources":["/home/rails/react-test-code-contextAPI/src/components/customer-list.js"],"names":["useCallback","useEffect","useState","Customer","AddCustomer","NewCustomerInput","UpdateCustomer","useStoreContext","customerData","Counter","CustomerList","console","log","useContainer","state","dispatch","customerList","isLoading","customerResource","reducerOne","displayNewInput","changeNewInput","updateCustomerData","changeUpdateCustomer","onNewCustomer","updateCustomerName","id","customerName","data","closeUpdation","ShowCustomerList","length","map","customer","index","pk","fields","csgrp_name","customer_group"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchCustomerListStart } from '../redux/reducers/customer-list';\nimport Customer from './customer';\nimport AddCustomer from './add-customer';\nimport NewCustomerInput from './new-customer-input';\nimport UpdateCustomer from './update-customer';\nimport {useStoreContext} from '../contextAPI/index';\nimport {customerData} from '../contextAPI/contextReducer';\nimport {Counter} from '../un-stated'\nconst CustomerList = () => {\n  // const dispatch = useDispatch();\n  console.log('counter value', Counter.useContainer())\n  const {state, dispatch} = Counter.useContainer();\n  console.log(state)\n  // const [customerResource, dispatch] = useStoreContext(); //using  context api\n \n  const { customerList, isLoading } = customerResource.reducerOne;\n  // console.log('inside use effect', Counter.useCounter())\n  useEffect(() => {\n    //dispatch(fetchCustomerListStart());\n \n    dispatch(customerData())\n  }, []);\n\n  const [displayNewInput, changeNewInput] = useState(false);\n  const [updateCustomerData, changeUpdateCustomer] = useState({});\n\n\n  //const { customerList, isLoading } = useSelector((state) => state.customerList);\n\n  const onNewCustomer = useCallback(() => {\n    changeNewInput((state) => !state);\n  });\n\n  const updateCustomerName = useCallback(({ id, customerName }) => {\n    changeUpdateCustomer((data) => ({\n      ...data,\n      id, \n      customerName\n    }));\n  });\n\n  const closeUpdation = useCallback(() => {\n    changeUpdateCustomer({});\n  });\n\n  const ShowCustomerList = () => {\n    return (\n       !isLoading && customerList && customerList.length\n        && customerList.map((customer, index) => {\n          return (\n            <Customer \n              key={customer.pk} \n              updateCustomerName={updateCustomerName}\n              id={customer.pk}\n              sequence={index + 1}\n              customerName={customer.fields.csgrp_name}\n              customerGroup={customer.fields.customer_group}\n            />\n          )    \n        })\n    )\n  }\n\n  return (\n    <div className=\"customer-list\">\n      <table className=\"customer-table\">\n        <tbody>\n          <tr>\n            <th>Sequence</th>\n            <th>Customer Group</th>\n            <th>Customer Name</th>\n          </tr>\n          <ShowCustomerList/>\n          {displayNewInput && <NewCustomerInput />}\n        </tbody>  \n      </table>\n      {\n        <AddCustomer \n          onNewCustomer={onNewCustomer} \n          displayNewInput={displayNewInput}/>\n      }\n      <div className={'tip'}>\n        Tip: Use Tab and 'Shift + Tab' to select option without a mouse.\n      </div>\n      {\n        updateCustomerData.id \n        && <UpdateCustomer \n          id={updateCustomerData.id} \n          closeUpdation={closeUpdation}\n          customerName={updateCustomerData.customerName}/>\n      }\n    </div>  \n  )\n}\n\nexport default CustomerList;\n"]},"metadata":{},"sourceType":"module"}